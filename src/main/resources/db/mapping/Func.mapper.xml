<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC " -//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bambooframework.dao.IFuncDao">
	<resultMap type="org.bambooframework.entity.Func" id="funcMap">
		<result column="ID_" jdbcType="INTEGER" property="id"/>
		<result column="PARENT_ID_" jdbcType="INTEGER" property="parentId"/>
		<result column="CODE_" jdbcType="VARCHAR" property="code"/>
		<result column="NAME_" jdbcType="VARCHAR" property="name"/>
		<result column="URL_" jdbcType="VARCHAR" property="url"/>
		<result column="TYPE_" jdbcType="VARCHAR" property="type"/>
		<result column="STATUS_" jdbcType="VARCHAR" property="status"/>
		<result column="SORT_" jdbcType="INTEGER" property="sort"/>
	</resultMap>

	<insert id="insert" parameterType="org.bambooframework.entity.Func" keyProperty="id">
		insert into T_FUNC(ID_,PARENT_ID_,CODE_,NAME_,URL_,TYPE_,STATUS_,SORT_)
		values(
			#{id,jdbcType=INTEGER},
			#{parentId,jdbcType=VARCHAR},
			#{code,jdbcType=VARCHAR},
			#{name,jdbcType=VARCHAR},
			#{url,jdbcType=VARCHAR},
			#{type,jdbcType=VARCHAR},
			#{status,jdbcType=VARCHAR},
			#{sort,jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="update" parameterType="org.bambooframework.entity.Func">
		update T_FUNC set 
			PARENT_ID_ = #{parentId,jdbcType=INTEGER},
			CODE_ = #{code,jdbcType=VARCHAR},
			NAME_ = #{name,jdbcType=VARCHAR},
			URL_ = #{url,jdbcType=VARCHAR},
			TYPE_ = #{type,jdbcType=VARCHAR},
			STATUS_ = #{status,jdbcType=VARCHAR},
			SORT_ = #{sort,jdbcType=VARCHAR}
		where ID_ = #{id}
	</update>
	
	<select id="get" resultMap="funcMap" parameterType="int">
		select * from t_func where id_=#{id}
	</select>
	
	<select id="findPermissionsOfUser" resultType="string" parameterType="string">
		select a.code_
		from t_func a,t_role_func b,t_user_role c,t_user d
		where a.id_ = b.func_id_
		and a.code_ is not null
		and b.role_id_=c.role_id_
		and c.user_id_ =  d.id_
		and d.LOGIN_NAME_ = #{username}
	</select>
	
	<select id="findAllPermissions" resultType="string" parameterType="string">
		select a.code_	from t_func a where a.code_ is not null
	</select>
	
	<select id="findMenusOfUser" resultMap="funcMap" parameterType="string">
		select a.*
		from t_func a,t_role_func b,t_user_role c,t_user d
		where a.id_ = b.func_id_
		and b.role_id_=c.role_id_
		and c.user_id_ =  d.id_
		and a.type_ = 'M'
		and d.LOGIN_NAME_ = #{username}
		order by a.sort_
	</select>
	<select id="findAllMenus" resultMap="funcMap">
		select a.*
		from t_func a
		where a.type_ = 'M'
		order by a.sort_
	</select>
	
	<select id="find" resultMap="funcMap" parameterType="map">
		select * from t_func
		<where>
			<if test="type!=null">
				and type_ = #{type}
			</if>
			<if test="parentId != null">
				and parent_id_ = #{parentId}
			</if>
			<if test="existurl == 'true'">
				and url_ is not null
			</if>
		</where>
	</select>
	
</mapper>